---
# tasks file for polkadot

- name: Ensure monit configuration directories exist
  file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
  loop:
    - /etc/monit
    - /etc/monit/conf.d

- name: Check for existing binaries
  stat:
    path: "{{ item.link }}"
  loop: "{{ polkadot_binaries }}"
  register: binary_checks

- name: Create temporary download directory
  file:
    path: "{{ download_temp_dir }}"
    state: directory
    mode: '0755'
  when: binary_checks.results | selectattr('stat.exists', 'equalto', false) | list | length > 0

- name: Create versioned binary directory
  file:
    path: "{{ binary_base_dir }}/{{ polkadot_version }}"
    state: directory
    mode: '0755'
  become: true
  when: binary_checks.results | selectattr('stat.exists', 'equalto', false) | list | length > 0

- name: Download Polkadot binaries
  get_url:
    url: "{{ polkadot_base_url }}/polkadot-{{ polkadot_version }}/{{ item.item.name }}"
    dest: "{{ binary_base_dir }}/{{ polkadot_version }}/{{ item.item.name }}"
    mode: '0755'
  loop: "{{ binary_checks.results }}"
  when: not item.stat.exists
  become: true

- name: Create binary symlinks
  file:
    src: "{{ binary_base_dir }}/{{ polkadot_version }}/{{ item.item.name }}"
    dest: "{{ item.item.link }}"
    state: link
    force: yes
  loop: "{{ binary_checks.results }}"
  when: not item.stat.exists
  become: true

- name: Configure firewall rules
  block:
    - name: Open Polkadot P2P port
      community.general.ufw:
        rule: allow
        port: '30333'
        proto: tcp
      ignore_errors: true

    - name: Open Polkadot RPC port
      community.general.ufw:
        rule: allow
        port: '9933'
        proto: tcp
      ignore_errors: true

    - name: Open Polkadot WebSocket port
      community.general.ufw:
        rule: allow
        port: '9944'
        proto: tcp
      ignore_errors: true

    - name: Open Polkadot Prometheus port
      community.general.ufw:
        rule: allow
        port: '9615'
        proto: tcp
      ignore_errors: true

- name: Create polkadot group
  group:
    name: polkadot
    system: yes
    state: present

- name: Create polkadot system user
  user:
    name: polkadot
    system: yes
    create_home: yes
    home: /home/polkadot
    shell: /sbin/nologin
    group: polkadot
  register: polkadot_user

- name: Create required directories
  file:
    path: "{{ item }}"
    state: directory
    owner: polkadot
    group: polkadot
    mode: '0755'
  loop:
    - /data/polkadot
    - /var/run/polkadot
    - /var/log/polkadot
    - /home/polkadot/.local/share/polkadot

- name: Configure polkadot service
  block:
    - name: Template systemd service file
      template:
        src: polkadot.service.j2
        dest: /etc/systemd/system/polkadot.service
        mode: '0644'
      notify: restart polkadot

    - name: Template configuration file
      template:
        src: config.json.j2
        dest: /data/polkadot/config.json
        owner: polkadot
        group: polkadot
        mode: '0644'
      notify: restart polkadot

- name: Template monit configuration
  template:
    src: monit_polkadot.j2
    dest: /etc/monit/conf.d/polkadot
    mode: '0644'
  notify: reload monit

- name: Manage polkadot service
  systemd:
    name: polkadot
    state: "{{ polkadot_service_state }}"
    enabled: "{{ polkadot_service_enabled }}"
    daemon_reload: yes

- name: Restart polkadot service
  meta: flush_handlers