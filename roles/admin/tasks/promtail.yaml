---
- name: Setup Promtail User and Group
  block:
    - name: Create Promtail group
      group:
        name: "{{ promtail.group }}"
        state: present

    - name: Create Promtail user
      user:
        name: "{{ promtail.user }}"
        group: "{{ promtail.group }}"
        shell: /bin/false
        system: yes
        create_home: no
        state: present

- name: Download and Install Promtail
  block:
    - name: Create promtail directories
      file:
        path: "{{ item }}"
        state: directory
        owner: "{{ promtail.user }}"
        group: "{{ promtail.group }}"
        mode: '0750'
      loop:
        - "{{ promtail.config_dir }}"
        - "{{ promtail.positions_dir }}"

    - name: Download promtail binary
      get_url:
        url: "https://github.com/grafana/loki/releases/download/v{{ promtail.version }}/promtail-linux-amd64.zip"
        dest: "/tmp/promtail-linux-amd64.zip"
        mode: '0644'
      register: promtail_download

    - name: Download SHA256SUMS
      get_url:
        url: "https://github.com/grafana/loki/releases/download/v{{ promtail.version }}/SHA256SUMS"
        dest: "/tmp/promtail-SHA256SUMS"
        mode: '0644'

    - name: Extract checksum for promtail binary
      shell: |
        grep "promtail-linux-amd64.zip" /tmp/promtail-SHA256SUMS > /tmp/promtail-checksum
      changed_when: false

    - name: Verify promtail binary checksum
      shell: |
        cd /tmp && sha256sum -c promtail-checksum
      register: checksum_verify
      failed_when: checksum_verify.rc != 0
      changed_when: false

    - name: Extract promtail binary
      unarchive:
        src: "/tmp/promtail-linux-amd64.zip"
        dest: "/tmp"
        remote_src: yes

    - name: Install promtail binary
      copy:
        src: "/tmp/promtail-linux-amd64"
        dest: "{{ promtail.install_dir }}/promtail"
        mode: '0755'
        remote_src: yes
        owner: "{{ promtail.user }}"
        group: "{{ promtail.group }}"

- name: Configure Promtail Service
  block:
    - name: Template promtail configuration
      template:
        src: promtail/promtail.yaml.j2
        dest: "{{ promtail.config_dir }}/config.yaml"
        owner: "{{ promtail.user }}"
        group: "{{ promtail.group }}"
        mode: '0640'
      notify: reload systemd

    - name: Template promtail systemd service
      template:
        src: promtail/promtail.service.j2
        dest: /etc/systemd/system/promtail.service
        mode: '0644'
      notify: reload systemd

    - name: Enable and start Promtail service
      systemd:
        name: promtail
        state: restarted
        enabled: yes
        daemon_reload: yes
      when: promtail.enabled | bool

    - name: Disable and stop Promtail service
      systemd:
        name: promtail
        state: stopped
        enabled: no
        daemon_reload: yes
      when: not promtail.enabled | bool

    - name: Clean up temporary files
      file:
        path: "{{ item }}"
        state: absent
      loop:
        - "/tmp/promtail-linux-amd64.zip"
        - "/tmp/promtail-linux-amd64"
        - "/tmp/promtail-SHA256SUMS"
        - "/tmp/promtail-checksum"

  become: true
  tags: ['monitoring', 'promtail']

- name: Configure AppArmor for Promtail
  block:
    - name: Template AppArmor profile for Promtail
      template:
        src: promtail/promtail.apparmor.j2
        dest: /etc/apparmor.d/usr.local.bin.promtail
        mode: '0644'
      notify: reload apparmor

    - name: Ensure AppArmor profile is enforced
      command: aa-enforce usr.local.bin.promtail
      changed_when: false
      when: promtail.apparmor.enforce | bool

  become: true
  when: 
    - promtail.apparmor.enabled | default(false) | bool
  tags: ['monitoring', 'promtail', 'security']

- name: Wait for Promtail metrics endpoint to be available
  uri:
    url: "http://localhost:{{ promtail.port }}/metrics"
    method: GET
    status_code: 200
  register: metrics_check
  until: metrics_check.status == 200
  retries: 12
  delay: 5