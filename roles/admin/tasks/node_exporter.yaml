---
- name: Create Node Exporter group
  group:
    name: "{{ node_exporter.group | default('node-exporter') }}"
    system: yes
    state: present
  tags: ['node_exporter']

- name: Create Node Exporter user
  user:
    name: "{{ node_exporter.user | default('node-exporter') }}"
    group: "{{ node_exporter.group | default('node-exporter') }}"
    system: yes
    shell: /sbin/nologin
    create_home: no
    state: present
  tags: ['node_exporter']

- name: Ensure node_exporter directories exist
  file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
    owner: "{{ node_exporter.user | default('node-exporter') }}"
    group: "{{ node_exporter.group | default('node-exporter') }}"
  loop:
    - "{{ node_exporter.install_dir | default('/usr/local/bin') }}"
    - "/var/lib/node_exporter"
  tags: ['node_exporter']

- name: Set Node Exporter version
  set_fact:
    node_exporter_version: "{{ node_exporter.version | default('1.8.2') }}"
  tags: ['node_exporter']

- name: Download node_exporter binary
  get_url:
    url: "https://github.com/prometheus/node_exporter/releases/download/v{{ node_exporter_version }}/node_exporter-{{ node_exporter_version }}.linux-amd64.tar.gz"
    dest: "/tmp/node_exporter-{{ node_exporter_version }}.linux-amd64.tar.gz"
    mode: '0644'
  register: node_exporter_download
  tags: ['node_exporter']

- name: Download SHA256SUMS
  get_url:
    url: "https://github.com/prometheus/node_exporter/releases/download/v{{ node_exporter_version }}/sha256sums.txt"
    dest: "/tmp/node_exporter-sha256sums.txt"
    mode: '0644'
  tags: ['node_exporter']

- name: Extract checksum for node_exporter binary
  shell: |
    grep "node_exporter-{{ node_exporter_version }}.linux-amd64.tar.gz" /tmp/node_exporter-sha256sums.txt > /tmp/node_exporter-checksum
  changed_when: false
  tags: ['node_exporter']

- name: Verify node_exporter binary checksum
  shell: |
    cd /tmp && sha256sum -c node_exporter-checksum
  register: checksum_verify
  failed_when: checksum_verify.rc != 0
  changed_when: false
  tags: ['node_exporter']

- name: Extract node_exporter binary
  unarchive:
    src: "/tmp/node_exporter-{{ node_exporter_version }}.linux-amd64.tar.gz"
    dest: "/tmp"
    remote_src: yes
  tags: ['node_exporter']

- name: Install node_exporter binary
  copy:
    src: "/tmp/node_exporter-{{ node_exporter_version }}.linux-amd64/node_exporter"
    dest: "{{ node_exporter.install_dir | default('/usr/local/bin') }}/node_exporter"
    mode: '0755'
    remote_src: yes
    owner: "{{ node_exporter.user | default('node-exporter') }}"
    group: "{{ node_exporter.group | default('node-exporter') }}"
  notify: restart node-exporter
  tags: ['node_exporter']

- name: Create node_exporter systemd service
  template:
    src: templates/node-exporter/node_exporter.service.j2
    dest: /etc/systemd/system/node-exporter.service
    mode: '0644'
  notify:
    - reload systemd
    - restart node-exporter
  when: not ansible_connection == 'docker'
  tags: ['node_exporter']

- name: Enable and start node_exporter service
  systemd:
    name: node-exporter
    state: started
    enabled: yes
    daemon_reload: yes
  when: node_exporter.enabled | default(false) | bool and not ansible_connection == 'docker'
  tags: ['node_exporter']

- name: Clean up temporary files
  file:
    path: "{{ item }}"
    state: absent
  loop:
    - "/tmp/node_exporter-{{ node_exporter_version }}.linux-amd64.tar.gz"
    - "/tmp/node_exporter-{{ node_exporter_version }}.linux-amd64"
    - "/tmp/node_exporter-sha256sums.txt"
    - "/tmp/node_exporter-checksum"
  tags: ['node_exporter']