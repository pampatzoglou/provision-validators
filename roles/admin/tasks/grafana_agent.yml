- name: Create Grafana Agent user
  user:
    name: "{{ grafana_agent.user }}"
    system: yes
    shell: /sbin/nologin
    home: "{{ grafana_agent.data_dir }}"
    create_home: no
  become: true

- name: Create Grafana Agent group
  group:
    name: "{{ grafana_agent.group }}"
    system: yes
  become: true

- name: Create required directories
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ grafana_agent.user }}"
    group: "{{ grafana_agent.group }}"
    mode: '0755'
  loop:
    - "{{ grafana_agent.config_dir }}"
    - "{{ grafana_agent.data_dir }}"
  become: true

- name: Download Grafana Agent binary
  get_url:
    url: "https://github.com/grafana/agent/releases/download/v{{ grafana_agent.version }}/grafana-agent-linux-amd64.zip"
    dest: "/tmp/grafana-agent.zip"
    mode: '0644'
  register: agent_download

- name: Install unzip
  package:
    name: unzip
    state: present
  become: true

- name: Extract Grafana Agent binary
  unarchive:
    src: "/tmp/grafana-agent.zip"
    dest: "/tmp"
    remote_src: yes
  when: agent_download.changed

- name: Install Grafana Agent binary
  copy:
    src: "/tmp/grafana-agent-linux-amd64"
    dest: "{{ grafana_agent.install_dir }}/grafana-agent"
    mode: '0755'
    owner: "{{ grafana_agent.user }}"
    group: "{{ grafana_agent.group }}"
    remote_src: yes
  become: true
  when: agent_download.changed

- name: Create Grafana Agent configuration
  template:
    src: grafana-agent.yaml.j2
    dest: "{{ grafana_agent.config_dir }}/config.yaml"
    owner: "{{ grafana_agent.user }}"
    group: "{{ grafana_agent.group }}"
    mode: '0644'
  become: true
  notify: restart grafana-agent

- name: Create Grafana Agent systemd service
  template:
    src: grafana-agent.service.j2
    dest: /etc/systemd/system/grafana-agent.service
    mode: '0644'
  become: true
  notify: 
    - reload systemd
    - restart grafana-agent

- name: Enable and start Grafana Agent service
  systemd:
    name: grafana-agent
    state: started
    enabled: yes
  become: true

- name: Clean up temporary files
  file:
    path: "{{ item }}"
    state: absent
  loop:
    - "/tmp/grafana-agent.zip"
    - "/tmp/grafana-agent-linux-amd64"
  when: agent_download.changed