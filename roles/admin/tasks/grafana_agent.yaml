---
- name: Create Grafana Agent group
  group:
    name: "{{ grafana_agent.group | default('grafana-agent') }}"
    system: yes
    state: present
  become: true
  tags: ['grafana_agent']

- name: Create Grafana Agent user
  user:
    name: "{{ grafana_agent.user | default('grafana-agent') }}"
    group: "{{ grafana_agent.group | default('grafana-agent') }}"
    system: yes
    shell: /sbin/nologin
    create_home: no
    state: present
  become: true
  tags: ['grafana_agent']

- name: Create Grafana Agent directories
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ grafana_agent.user | default('grafana-agent') }}"
    group: "{{ grafana_agent.group | default('grafana-agent') }}"
    mode: '0750'
  loop:
    - "{{ grafana_agent.config_dir | default('/etc/grafana-agent') }}"
    - "{{ grafana_agent.data_dir | default('/var/lib/grafana-agent') }}"
  become: true
  tags: ['grafana_agent']

- name: Set Grafana Agent version
  set_fact:
    grafana_agent_version: "{{ grafana_agent.version | default('0.43.4') }}"
  tags: ['grafana_agent']

- name: Download Grafana Agent binary
  get_url:
    url: "https://github.com/grafana/agent/releases/download/v{{ grafana_agent_version }}/grafana-agent-linux-amd64.zip"
    dest: "/tmp/grafana-agent-linux-amd64.zip"
    mode: '0644'
  register: agent_download
  tags: ['grafana_agent']

- name: Download SHA256SUMS
  get_url:
    url: "https://github.com/grafana/agent/releases/download/v{{ grafana_agent_version }}/SHA256SUMS"
    dest: "/tmp/grafana-agent-SHA256SUMS"
    mode: '0644'
  tags: ['grafana_agent']

- name: Verify Grafana Agent binary checksum
  shell: |
    cd /tmp
    grep "grafana-agent-linux-amd64.zip" grafana-agent-SHA256SUMS | sha256sum -c
  changed_when: false
  tags: ['grafana_agent']

- name: Extract Grafana Agent binary
  unarchive:
    src: "/tmp/grafana-agent-linux-amd64.zip"
    dest: "/tmp"
    remote_src: yes
  tags: ['grafana_agent']

- name: Install Grafana Agent binary
  copy:
    src: "/tmp/grafana-agent-linux-amd64"
    dest: "{{ grafana_agent.install_dir | default('/usr/local/bin') }}/grafana-agent"
    mode: '0755'
    remote_src: yes
    owner: "{{ grafana_agent.user | default('grafana-agent') }}"
    group: "{{ grafana_agent.group | default('grafana-agent') }}"
  become: true
  notify: restart grafana-agent
  tags: ['grafana_agent']

- name: Template Grafana Agent configuration
  template:
    src: grafana_agent.yaml.j2
    dest: "{{ grafana_agent.config_dir | default('/etc/grafana-agent') }}/agent.yaml"
    owner: "{{ grafana_agent.user | default('grafana-agent') }}"
    group: "{{ grafana_agent.group | default('grafana-agent') }}"
    mode: '0640'
  become: true
  notify: restart grafana-agent
  tags: ['grafana_agent']

- name: Template Grafana Agent systemd service
  template:
    src: grafana_agent.service.j2
    dest: /etc/systemd/system/grafana-agent.service
    mode: '0644'
  become: true
  notify:
    - reload systemd
    - restart grafana-agent
  when: not ansible_connection == 'docker'
  tags: ['grafana_agent']

- name: Enable and start Grafana Agent service
  systemd:
    name: grafana-agent
    state: started
    enabled: yes
    daemon_reload: yes
  become: true
  when: grafana_agent.enabled | default(false) | bool and not ansible_connection == 'docker'
  tags: ['grafana_agent']

- name: Clean up temporary files
  file:
    path: "{{ item }}"
    state: absent
  loop:
    - "/tmp/grafana-agent-linux-amd64.zip"
    - "/tmp/grafana-agent-linux-amd64"
    - "/tmp/grafana-agent-SHA256SUMS"
    - "/tmp/grafana-agent-checksum"
  tags: ['grafana_agent']